buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
//    dependencies {
//        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
//        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
////        classpath "mysql:mysql-connector-java:$mysqlVersion"
//    }
}

plugins {
    id 'java-library'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "1.0.11.RELEASE"
}

allprojects {
    apply plugin: "idea"

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        jcenter()
        mavenCentral()
        maven { url "https://repo.maven.apache.org/maven2" }
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'java'

    group = "com.walker.whale"

    version = new Date().format("yyyyMMdd") + "-SNAPSHOT"
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        implementation("com.google.guava:guava:$guavaVersion")

        compileOnly("org.projectlombok:lombok:$lombokVersion")
        annotationProcessor("org.projectlombok:lombok:$lombokVersion")

        testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
        testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")

    }

    test {
        useJUnitPlatform()
    }

}

bootJar {
    enabled = false
}